<?php
/**
 * @file
 * Code for the APWA Islandora Webform Integration feature.
 */

include_once 'apwa_iw.features.inc';

include_once 'includes/apwa_iw.workflow_feature.inc';

define('APWA_INLINE_WEBFORM_DOM_ID', 'apwa_inline_webform_target');


/**
 * Include TRANSCRIPT in IWI target datastreams.
 *
 * return an array with a minimum of 'dsid' and 'mime' values.
 */
/**
 * Implements hook_iwi_ingestible_datastreams_alter().
 */
function apwa_iw_iwi_ingestible_datastreams_alter(&$datastreams, $object, $mimetypes) {
  $datastreams['TRANSCRIPT_WF (text/plain)'] = array(
    'dsid' => 'TRANSCRIPT_WF',
    'mime' => 'text/plain',
  );
}

/**
 * Implements hook_islandora_webform_theme_webform_link_alter().
 */
function apwa_iw_islandora_webform_theme_webform_link_alter(&$webform_link, $islandora_webform_record) {
//  dpm(get_defined_vars());
}

/**
 * Implements hook_islandora_webform_theme_webform_link_alter().
 */
function apwa_iw_islandora_theme_webform_links_alter(&$render, $alter_data) {
  foreach(element_children($render) as $jqid) {
    if($jqid != 'inline-webform-target') {
      if (!empty($render[$jqid]['webform-links'])) {
        $webform_link_indexes = element_children($render[$jqid]['webform-links']);
        foreach($webform_link_indexes as $webform_link_index) {

        }
        $submissions = !empty($render[$jqid]['#submissions']) ? $render[$jqid]['#submissions'] : array();
        $state_counts = array('is draft' => 0);
        foreach($submissions as $sid => $submission) {
          if(!empty($submission->is_draft)) {
            $state_counts['is draft'] += 1;
          }
          if(!empty($submission->_webform_workflow_state->wsid)) {
            $ws = $submission->_webform_workflow_state;
            $state_counts[$ws->wsid] = 1 + (empty($state_counts[$ws->wsid]) ? 0 : $state_counts[$ws->wsid]);
          }
        }
      }
      module_load_include('inc', 'apwa_iw', 'includes/webform_link_states');
      $show_states = apwa_iw_webform_link_states();
      // We rely on these link states being sorted by priority. First match "wins".
      foreach($show_states as $wsid => $show_state) {
        if(!empty($state_counts[$wsid])) {
          $label = t('!label (!count)',array('!label' => $show_state['link-text'], '!count' => $state_counts[$wsid]));
          $render[$jqid]['webform-links'][$alter_data['islandora_object']->id][] = array('#markup' => $label);
        }
      }
    }
  }
  if (!empty($alter_data['islandora_object']['TRANSCRIPT_WF'])) {
    $render['transcript-link'] = array(
      '#type' => 'container',
      '#attributes' => array(
        'id' => 'transcript_wf_link',
        'class' => array(
          'transcript-wf-link',
          'webform-links-wrapper',
        ),
      ),
      array('#markup' => t('View transcription')),
    );
  }

}

/**
 * Implements hook_iw_inline_webform_ajax_commands_alter().
 *
 * Target the inline islandora webform to a new location.
 */
function apwa_iw_iw_inline_webform_ajax_commands_alter(&$commands, $vars) {
  $target = '#' . APWA_INLINE_WEBFORM_DOM_ID;
  $commands['remove-container'] = ajax_command_remove($target .  ' > *');
  // Set css on webform links wrapper.
  $commands['remove-wrapper-class'] = ajax_command_invoke('.webform-links-wrapper', 'removeClass', array('opened'));
  $commands['add-wrapper-class'] = ajax_command_invoke('#iw_webform_links_' . $vars['webform']->nid . '.webform-links-wrapper', 'addClass', array('opened'));
  $commands['remove-object-display-wrapper-class'] = ajax_command_invoke('#islandora_object_display_wrapper', 'removeClass', array('display-webform'));
  $commands['add-object-display-wrapper-class'] = ajax_command_invoke('#islandora_object_display_wrapper', 'addClass', array('display-webform'));

  // Target a different div for the inline webform.
  $commands['jquery-selector'] = ajax_command_append($target, $vars['html']);
}

/**
 * Implements hook_library().
 */
function apwa_iw_library() {
  $libraries['drag-resize'] = array(
    'title' => 'JQuery UI Drag and Resize',
    'website' => 'http://jqueryui.com/download/#!version=1.12.1&components=101100000100101000000000010000000000000000000000',
    'version' => '1.2',
    'js' => array(
      drupal_get_path('module', 'apwa_iw') . '/libraries/jquery-ui-1.12.1.drag-resize/jquery-ui.min.js' => array(),
    ),
    'css' => array(
      drupal_get_path('module', 'apwa_iw') . '/libraries/jquery-ui-1.12.1.drag-resize/jquery-ui.min.css' => array(
        'type' => 'file',
        'media' => 'screen',
      ),
      drupal_get_path('module', 'apwa_iw') . '/libraries/jquery-ui-1.12.1.drag-resize/jquery-ui..structure.min.css' => array(
        'type' => 'file',
        'media' => 'screen',
      ),
      drupal_get_path('module', 'apwa_iw') . '/libraries/jquery-ui-1.12.1.drag-resize/jquery-ui.theme.min.css' => array(
        'type' => 'file',
        'media' => 'screen',
      ),
    ),
  );
  return $libraries;
}


/**
 * Implements hook_process_template for each known content model.
 *
 * @TODO: Is there some way to do this dynamically?
 */
function apwa_iw_process_islandora_default(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_object_print(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_object_print_object(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_audio(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_book_book(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
  $vars['islandora_content'] = $vars['viewer'];
}
function apwa_iw_process_islandora_book_page(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
  $vars['islandora_content'] = $vars['viewer'];
}
function apwa_iw_process_islandora_disk_image(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_person(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_dept(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_basic_image(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_basic_image_print(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_large_image(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_large_image_print(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_newspaper(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_newspaper_issue(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_newspaper_page(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_pdf(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_pdf_print(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_video(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_web_archive(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}
function apwa_iw_process_islandora_videojs(&$vars) {
  module_load_include('inc', 'apwa_iw', 'includes/object_display');
  apwa_iw_process_all_object_view($vars);
}


/**
 * Implements hook_menu().
 */
function apwa_iw_menu() {
  return array(
    'islandora/object/%islandora_object/transcript_wf' => array(
      'title' => 'Transcription',
      'type' => MENU_NORMAL_ITEM,
      'page callback' => 'islandora_transcript_wf_view',
      'page arguments' => array(2),
      'access callback' => 'islandora_transcript_wf_access_callback',
      'access arguments' => array(2),
      'file' => 'includes/utilities.inc',
    ),
    'islandora/object/%islandora_object/transcript_wf/getajax' => array(
      'type' => MENU_CALLBACK,
      'page callback' => 'islandora_transcript_wf_getajax',
      'page arguments' => array(2),
      'access callback' => 'islandora_transcript_wf_access_callback',
      'access arguments' => array(2),
      'file' => 'includes/utilities.inc',
      'delivery callback' => 'islandora_transcript_wf_ajax_callback',  // Magic goes here.
    ),
  );
}

/**
 * Access callback.
 *
 * Requires that the given object contains a TRANSCRIPT_WF datastream (and to be
 * viewable, as per the stock permissions).
 *
 * @param AbstractObject $object
 *   The object to test, if NULL the given object doesn't exist or is
 *   inaccessible.
 *
 * @return bool
 *   TRUE if the user is allowed to access the transcript interface, FALSE
 *   otherwise.
 */
function islandora_transcript_wf_access_callback($object) {
  return is_object($object) && isset($object['TRANSCRIPT_WF']) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $object['TRANSCRIPT_WF']);
}

